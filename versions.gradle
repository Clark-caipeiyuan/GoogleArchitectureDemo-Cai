    /**
    * Shared file between builds so that they can all use the same dependencies and
    * maven repositories.
    **/
    ext.deps = [:]
    def versions = [:]
    versions.arch = "1.1.0"
    versions.room = "2.4.1"
    versions.lifecycle_version = "2.5.0-alpha02"
    versions.arch_version = "2.1.0"
    versions.lifecycle = "2.4.1"
    versions.support = "26.1.0"
    versions.dagger = "2.11"
    versions.junit = "4.12"
    versions.espresso = "3.0.1"
    versions.retrofit = "2.3.0"
    versions.mockwebserver = "3.8.1"
    versions.apache_commons = "2.5"
    versions.mockito = "2.7.19"
    versions.mockito_all = "1.10.19"
    versions.dexmaker = "2.2.0"
    versions.constraint_layout = "2.1.3"
    versions.constraint_layout_compose = "1.0.0"
    versions.glide = "3.8.0"
    versions.timber = "4.5.1"
    versions.android_gradle_plugin = "3.0.0"
    versions.rxjava2 = "2.1.5"
    versions.rx_android = "2.0.1"
    versions.arouter_version = "1.2.4"
    versions.arouter_processor_version = "1.1.4"
    versions.atsl_runner = "1.0.1"
    versions.atsl_rules = "1.0.1"
    versions.hamcrest = "1.3"
    versions.kotlin = "1.1.4-2"
    versions.paging = "1.0.0-alpha3"
    versions.okhttp = "3.9.0"
    versions.butterknife = "10.0.0"
    versions.logutils_version = "1.5.1.1"
    //迁移到androidX
    versions.annotation = "1.3.0"
    versions.appcompat = "1.4.1"

    versions.legacy = "1.0.0"
    versions.percent = "1.0.0"
    versions.recycleview_selection = "1.1.0"
    versions.recyclerview = "1.2.1"
    versions.cardview = "1.0.0"
    versions.design = "1.0.0-rc01"
    versions.support_v4 = "1.0.0"
    versions.core_version = "1.7.0"
    versions.core = "1.0.0"
    versions.multidex = "2.0.1"
    versions.multidex_instrumentation = "1.0.2"
    versions.core = "1.0.0"
    versions.core_alpha = "1.0.0-alpha02"
    versions.core_beta = "1.0.0-beta01"

    def deps = [:]

    def support = [:]
    support.annotations = "androidx.annotation:annotation:$versions.annotation"
    support.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
    support.recycleview_selection = "androidx.recyclerview:recyclerview-selection:$versions.recycleview_selection"
    support.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
    support.cardview = "androidx.cardview:cardview:$versions.cardview"
    support.design = "com.google.android.material:material:$versions.design"
    support.v4 = "androidx.legacy:legacy-support-v4:$versions.support_v4"
    support.core = "androidx.core:core:$versions.core_version"
    support.core_ktx = "androidx.core:core-ktx:$versions.core_version"
    support.core_role = "androidx.core:core-role:$versions.core"
    support.core_animation = "androidx.core:core-animation:$versions.core_alpha"
    support.core_animation_testing = "androidx.core:core-animation-testing:$versions.core_alpha"
    support.core_google_shortcuts = "androidx.core:core-google-shortcuts:$versions.core"
    support.core_remoteviews = "androidx.core:core-remoteviews:$versions.core_alpha"
    support.core_splashscreen = "androidx.core:core-splashscreen:$versions.core_beta"
    support.multidex = "androidx.multidex:multidex:$versions.multidex"
    support.multidex_instrumentation = "androidx.multidex:multidex-instrumentation:$versions.multidex_instrumentation"
    deps.support = support

    def room = [:]
    room.runtime = "androidx.room:room-runtime:$versions.room"
    room.compiler = "androidx.room:room-compiler:$versions.room"
    room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
    room.testing = "androidx.room:room-testing:$versions.room"
    deps.room = room

    def lifecycle = [:]
    // ViewModel
    lifecycle.lifecycle_viewmodel= "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycle_version"
    // LiveData
    lifecycle.lifecycle_livedata= "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    lifecycle.runtime= "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle_version"
    // Saved state module for ViewModel
    lifecycle.lifecycle_viewmodel_savedstate= "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle_version"
    // Annotation processor
    lifecycle.compiler= "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    lifecycle.java8= "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    lifecycle.lifecycle_service= "androidx.lifecycle:lifecycle-service:$versions.lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    lifecycle.lifecycle_process= "androidx.lifecycle:lifecycle-process:$versions.lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    lifecycle.lifecycle_reactivestreams = "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle_version"

    // optional - Test helpers for LiveData
    lifecycle.lifecycle_core_testing = "androidx.arch.core:core-testing:$versions.arch_version"

    deps.lifecycle = lifecycle

    def arch_core = [:]
    arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_version"
    deps.arch_core = arch_core

    def okhttp = [:]
    okhttp.okhttp3 = "com.squareup.okhttp3:okhttp:$versions.okhttp"
    okhttp.okhttp3_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    deps.okhttp = okhttp

    def butterknife = [:]
    butterknife.runtime = "com.jakewharton:butterknife:$versions.butterknife"
    butterknife.compiler = "com.jakewharton:butterknife-compiler:$versions.butterknife"
    deps.butterknife = butterknife

    def arouter = [:]
    arouter.runtime = "com.alibaba:arouter-api:$versions.arouter_version"
    arouter.compiler = "com.alibaba:arouter-compiler:$versions.arouter_processor_version"
    deps.arouter = arouter

    def retrofit = [:]
    retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
    retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    retrofit.adapter_rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    deps.retrofit = retrofit


    def dagger = [:]
    dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
    dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
    dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
    dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
    dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
    deps.dagger = dagger

    def espresso = [:]
    espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
    espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
    espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
    deps.espresso = espresso

    def atsl = [:]
    atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
    atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
    deps.atsl = atsl

    def mockito = [:]
    mockito.core = "org.mockito:mockito-core:$versions.mockito"
    mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
    deps.mockito = mockito

    def kotlin = [:]
    kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jre7:$versions.kotlin"
    kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
    kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    deps.kotlin = kotlin
    deps.paging = "android.arch.paging:runtime:$versions.paging"
    deps.glide = "com.github.bumptech.glide:glide:$versions.glide"
    deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
    deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    deps.constraint_layout_compose = "androidx.constraintlayout:constraintlayout-compose:$versions.constraint_layout_compose"
    deps.timber = "com.jakewharton.timber:timber:$versions.timber"
    deps.junit = "junit:junit:$versions.junit"
    deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
    deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
    deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"

    deps.logutils = "com.apkfuns.logutils:library:$versions.logutils_version"

    deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
    deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
    ext.deps = deps

    def build_versions = [:]
    build_versions.min_sdk = 26
    build_versions.target_sdk = 31
    build_versions.build_tools = "31.0.0"
    ext.build_versions = build_versions


    def addRepos(RepositoryHandler handler) {

        handler.maven {
            url 'https://maven.google.com/'
            name 'Google'
        }

        handler.jcenter()
        handler.maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        handler.maven { url 'https://oss.jfrog.org/libs-snapshot' }
        handler.maven { url 'https://jitpack.io' }
        handler.mavenCentral()

    }
    ext.addRepos = this.&addRepos
